<?php

namespace d3yii2\d3pop3\models;

use d3yii2\d3pop3\components\Action;
use d3yii2\d3pop3\models\base\D3pop3ConnectingSettings as BaseD3pop3ConnectingSettings;
use Yii;
use yii\web\Application;

/**
 * This is the model class for table "d3pop3_connecting_settings".
 */
class D3pop3ConnectingSettings extends BaseD3pop3ConnectingSettings
{

    public function rules()
    {
        return array_merge(parent::rules(),[
            ['email','email'],
            [
                'email', 'unique',
                'targetAttribute' => ['email', 'type'],
                'comboNotUnique' => Yii::t(
                    'd3pop3',
                    'Email: {email} has already been taken for type: {type}',
                    ['email' => $this->email, 'type' => $this->type]) //@FIXME - translate nerāda epasta adresi, bet tikai tipu?
                ]
        ]);
    }

    public function save($runValidation = true, $attributeNames = null)
    {
        if ($this->getIsNewRecord()) {
            return $this->insert($runValidation, $attributeNames);
        }

        return parent::save($runValidation, $attributeNames);
    }

    public function afterSave($insert, $changedAttributes)
    {
        if($insert){
            Action::createdAccount($this->id);
        }else{
            Action::updatedAccount($this->id);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function delete()
    {
        $this->deleted = 1;
        return $this->save();
    }

    public static function find()
    {

        if (Yii::$app instanceof Application) {
            return parent::find()->where([
                'sys_company_id' => Yii::$app->SysCmp->getActiveCompanyId(),
            ]);
        }

        return parent::find();
    }

    public static function  findOneByEmail(string $email)
    {
        return self::findOne([
            'email'=>$email,
            'deleted' => 0
        ]);
    }

    public function getSettings()
    {
        return json_decode($this->settings, true);
    }
}
